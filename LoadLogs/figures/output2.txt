pydev debugger: starting
51 valid logs out of 131
defaultdict(<type 'int'>, {'rumi': 10, 'game': 60, 'clicks': 39, 'mt': 6})
Counter({1: 27, 2: 24})
fold 0
Counter({1: 13, 2: 12})
Counter({1: 14, 2: 12})
(1, (3,))
narrow(1.85714, std=0.98974 #14) > (!) wide(1.00000, std=0.00000 #12) (p=0.0082)
(2, (3, 6))
narrow(5.07143, std=1.16277 #14) > wide(4.41667, std=0.86201 #12) (p=0.1354)
(3, (0, 3, 4))
narrow(6.21429, std=1.56655 #14) > wide(5.08333, std=1.03749 #12) (p=0.0516)
(4, (0, 3, 4, 6))
narrow(9.42857, std=1.76126 #14) > wide(8.50000, std=1.44338 #12) (p=0.1749)
(5, (0, 3, 4, 6, 7))
narrow(12.61429, std=1.87344 #14) > wide(11.25000, std=1.79745 #12) (p=0.0825)
(6, (0, 3, 4, 5, 6, 7))
narrow(14.47143, std=2.69004 #14) > (!) wide(12.50000, std=1.82392 #12) (p=0.0498)
(7, (0, 1, 3, 4, 5, 6, 7))
narrow(17.32857, std=3.41539 #14) > wide(15.66667, std=2.33071 #12) (p=0.1836)
(8, (0, 1, 2, 3, 4, 5, 6, 7))
narrow(19.97143, std=3.66653 #14) > wide(18.16667, std=2.96910 #12) (p=0.2023)
(9, (0, 1, 2, 3, 4, 5, 6, 7, 8))
narrow(22.66429, std=4.20673 #14) > wide(21.19167, std=3.33203 #12) (p=0.3568)
fold 1
Counter({1: 13, 2: 12})
Counter({1: 14, 2: 12})
(1, (3,))
narrow(1.57143, std=0.90351 #14) > wide(1.08333, std=0.27639 #12) (p=0.0965)
(2, (3, 7))
narrow(4.69286, std=1.01662 #14) > wide(4.00833, std=0.71933 #12) (p=0.0731)
(3, (0, 2, 3))
narrow(6.00000, std=1.36277 #14) > wide(5.41667, std=1.11492 #12) (p=0.2673)
(4, (0, 2, 3, 7))
narrow(9.12143, std=1.44873 #14) > wide(8.34167, std=1.37868 #12) (p=0.1915)
(5, (0, 2, 3, 5, 7))
narrow(11.19286, std=2.30325 #14) > wide(9.75833, std=1.50303 #12) (p=0.0887)
(6, (0, 2, 3, 4, 5, 7))
narrow(13.76429, std=2.64592 #14) > (!) wide(11.75833, std=1.72986 #12) (p=0.0411)
(7, (1, 2, 4, 5, 6, 7, 8))
narrow(19.81429, std=4.15157 #14) > wide(18.41667, std=3.13072 #12) (p=0.3674)
(8, (0, 1, 2, 4, 5, 6, 7, 8))
narrow(21.60000, std=3.85765 #14) > wide(20.16667, std=2.96601 #12) (p=0.3238)
(9, (0, 1, 2, 3, 4, 5, 6, 7, 8))
narrow(23.17143, std=3.92218 #14) > wide(21.25000, std=2.92902 #12) (p=0.1924)
[ 0.0523392   0.10422956  0.1594678   0.1832111   0.08561355  0.04545164
  0.27552037  0.26305763  0.27462743]
(1, array([3]))
narrow(1.62963, std=0.86701 #27) > (!) wide(1.08333, std=0.27639 #24) (p=0.0056)
(2, array([3, 7]))
narrow(4.48519, std=1.13910 #27) > (!) wide(3.70833, std=0.93805 #24) (p=0.0127)
(3, array([3, 5, 7]))
narrow(6.37407, std=1.77025 #27) > (!) wide(5.25000, std=1.15217 #24) (p=0.0123)
(4, array([3, 4, 5, 7]))
narrow(8.70741, std=2.16263 #27) > (!) wide(7.37500, std=1.14719 #24) (p=0.0109)
(5, array([0, 3, 4, 5, 7]))
narrow(10.74444, std=2.51386 #27) > (!) wide(9.25000, std=1.39433 #24) (p=0.0147)
(6, array([0, 3, 4, 5, 6, 7]))
narrow(14.04074, std=2.70764 #27) > (!) wide(12.58333, std=1.67075 #24) (p=0.0301)
(7, array([0, 2, 3, 4, 5, 6, 7]))
narrow(16.48519, std=3.19046 #27) > wide(15.00000, std=2.20189 #24) (p=0.0670)
(8, array([0, 1, 2, 3, 4, 5, 6, 7]))
narrow(19.37407, std=3.74271 #27) > wide(18.08333, std=2.54455 #24) (p=0.1695)
(9, array([0, 1, 2, 3, 4, 5, 6, 7, 8]))
narrow(22.06296, std=4.26025 #27) > wide(21.05833, std=2.86137 #24) (p=0.3434)
finish

